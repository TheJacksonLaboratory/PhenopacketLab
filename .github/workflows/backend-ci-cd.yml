# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Backend CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master, development ]

jobs:
  build-test-backend:

    runs-on: ${{ matrix.os }}
    env:
      JDK_VERSION: ${{ matrix.jdk }}

    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, macOS-latest, ubuntu-latest ]
        jdk: [ 17 ]
        env: [ sqa ]
#        env: [ prod, dev, sqa ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build with Maven
        run: ./mvnw --projects phenopacketlab-restapi --also-make --batch-mode verify

  deploy-backend:
    needs: build-test-backend
    name: Setup, Build Docker Img, Publish, and Deploy to Cloud Run
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # build backend
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build Backend with Maven
        run: ./mvnw --projects phenopacketlab-restapi --also-make --batch-mode verify

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GOOGLE_CLOUD_SA }}
          export_default_credentials: true

      # Configure docker to use the gcloud command-line tool as a credential helper
      - name: authenticate gcloud
        run: |
          gcloud auth configure-docker -q

      # Download the data folder locally
      - name: Get_data
        run: gsutil cp -r gs://jax-robinson-phenopacket-project-data/data .

      # Build docker image
      - name: Image_build
        run: docker build -t gcr.io/${{ secrets.GCP_PROJECT }}/phenopacketlab-backend-${{ matrix.env}}-01 .

      # Push image to Google Container Registry
      - name: Image_push
        run: docker push gcr.io/${{ secrets.GCP_PROJECT }}/phenopacketlab-backend-${{ matrix.env}}-01

      # Deploy the Docker image to the Cloud run service
      - name: Deploy
        run: |
          gcloud run deploy phenopacketlab-backend-${{ matrix.env}}-01 --image gcr.io/${{ secrets.GCP_PROJECT }}/phenopacketlab-backend-${{ matrix.env}}-01 \
          --platform managed \
          --allow-unauthenticated \
          --memory 4G